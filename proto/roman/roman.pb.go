// Code generated by protoc-gen-go. DO NOT EDIT.
// source: roman.proto

package roman

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type TokenAnalysis struct {
	Key                  string         `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value                string         `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	Next                 *TokenAnalysis `protobuf:"bytes,3,opt,name=next,proto3" json:"next,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *TokenAnalysis) Reset()         { *m = TokenAnalysis{} }
func (m *TokenAnalysis) String() string { return proto.CompactTextString(m) }
func (*TokenAnalysis) ProtoMessage()    {}
func (*TokenAnalysis) Descriptor() ([]byte, []int) {
	return fileDescriptor_7311ee8b3fc89c0d, []int{0}
}

func (m *TokenAnalysis) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TokenAnalysis.Unmarshal(m, b)
}
func (m *TokenAnalysis) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TokenAnalysis.Marshal(b, m, deterministic)
}
func (m *TokenAnalysis) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TokenAnalysis.Merge(m, src)
}
func (m *TokenAnalysis) XXX_Size() int {
	return xxx_messageInfo_TokenAnalysis.Size(m)
}
func (m *TokenAnalysis) XXX_DiscardUnknown() {
	xxx_messageInfo_TokenAnalysis.DiscardUnknown(m)
}

var xxx_messageInfo_TokenAnalysis proto.InternalMessageInfo

func (m *TokenAnalysis) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *TokenAnalysis) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

func (m *TokenAnalysis) GetNext() *TokenAnalysis {
	if m != nil {
		return m.Next
	}
	return nil
}

type Response struct {
	Status               int32            `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Response             *SuccessResponse `protobuf:"bytes,2,opt,name=response,proto3" json:"response,omitempty"`
	Error                *ErrorResponse   `protobuf:"bytes,3,opt,name=error,proto3" json:"error,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *Response) Reset()         { *m = Response{} }
func (m *Response) String() string { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()    {}
func (*Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_7311ee8b3fc89c0d, []int{1}
}

func (m *Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Response.Unmarshal(m, b)
}
func (m *Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Response.Marshal(b, m, deterministic)
}
func (m *Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Response.Merge(m, src)
}
func (m *Response) XXX_Size() int {
	return xxx_messageInfo_Response.Size(m)
}
func (m *Response) XXX_DiscardUnknown() {
	xxx_messageInfo_Response.DiscardUnknown(m)
}

var xxx_messageInfo_Response proto.InternalMessageInfo

func (m *Response) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func (m *Response) GetResponse() *SuccessResponse {
	if m != nil {
		return m.Response
	}
	return nil
}

func (m *Response) GetError() *ErrorResponse {
	if m != nil {
		return m.Error
	}
	return nil
}

type SuccessResponse struct {
	Result               string   `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SuccessResponse) Reset()         { *m = SuccessResponse{} }
func (m *SuccessResponse) String() string { return proto.CompactTextString(m) }
func (*SuccessResponse) ProtoMessage()    {}
func (*SuccessResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_7311ee8b3fc89c0d, []int{2}
}

func (m *SuccessResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SuccessResponse.Unmarshal(m, b)
}
func (m *SuccessResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SuccessResponse.Marshal(b, m, deterministic)
}
func (m *SuccessResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SuccessResponse.Merge(m, src)
}
func (m *SuccessResponse) XXX_Size() int {
	return xxx_messageInfo_SuccessResponse.Size(m)
}
func (m *SuccessResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SuccessResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SuccessResponse proto.InternalMessageInfo

func (m *SuccessResponse) GetResult() string {
	if m != nil {
		return m.Result
	}
	return ""
}

type ErrorResponse struct {
	ErrorText            string   `protobuf:"bytes,1,opt,name=error_text,json=errorText,proto3" json:"error_text,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ErrorResponse) Reset()         { *m = ErrorResponse{} }
func (m *ErrorResponse) String() string { return proto.CompactTextString(m) }
func (*ErrorResponse) ProtoMessage()    {}
func (*ErrorResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_7311ee8b3fc89c0d, []int{3}
}

func (m *ErrorResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ErrorResponse.Unmarshal(m, b)
}
func (m *ErrorResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ErrorResponse.Marshal(b, m, deterministic)
}
func (m *ErrorResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ErrorResponse.Merge(m, src)
}
func (m *ErrorResponse) XXX_Size() int {
	return xxx_messageInfo_ErrorResponse.Size(m)
}
func (m *ErrorResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ErrorResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ErrorResponse proto.InternalMessageInfo

func (m *ErrorResponse) GetErrorText() string {
	if m != nil {
		return m.ErrorText
	}
	return ""
}

func init() {
	proto.RegisterType((*TokenAnalysis)(nil), "roman.TokenAnalysis")
	proto.RegisterType((*Response)(nil), "roman.Response")
	proto.RegisterType((*SuccessResponse)(nil), "roman.SuccessResponse")
	proto.RegisterType((*ErrorResponse)(nil), "roman.ErrorResponse")
}

func init() { proto.RegisterFile("roman.proto", fileDescriptor_7311ee8b3fc89c0d) }

var fileDescriptor_7311ee8b3fc89c0d = []byte{
	// 252 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x91, 0x31, 0x6b, 0xc3, 0x30,
	0x10, 0x85, 0x71, 0x53, 0x85, 0xe4, 0x4c, 0x70, 0x39, 0x42, 0x30, 0x85, 0x42, 0xf0, 0xe4, 0x76,
	0xf0, 0xe0, 0x2e, 0x5d, 0x33, 0x74, 0x2f, 0x6a, 0xf6, 0xa2, 0x86, 0x1b, 0x4a, 0x5c, 0x29, 0xe8,
	0xe4, 0x92, 0xac, 0xfd, 0xe5, 0x45, 0x67, 0xc5, 0x90, 0xd0, 0x4d, 0xef, 0xf1, 0xf8, 0xde, 0xdd,
	0x09, 0x72, 0xef, 0xbe, 0x8d, 0x6d, 0x0e, 0xde, 0x05, 0x87, 0x4a, 0x44, 0x65, 0x60, 0xb1, 0x75,
	0x7b, 0xb2, 0x1b, 0x6b, 0xba, 0x13, 0x7f, 0x31, 0xde, 0xc1, 0x64, 0x4f, 0xa7, 0x32, 0x5b, 0x67,
	0xf5, 0x5c, 0xc7, 0x27, 0x2e, 0x41, 0xfd, 0x98, 0xae, 0xa7, 0xf2, 0x46, 0xbc, 0x41, 0x60, 0x0d,
	0xb7, 0x96, 0x8e, 0xa1, 0x9c, 0xac, 0xb3, 0x3a, 0x6f, 0x97, 0xcd, 0xc0, 0xbe, 0x60, 0x69, 0x49,
	0x54, 0xbf, 0x19, 0xcc, 0x34, 0xf1, 0xc1, 0x59, 0x26, 0x5c, 0xc1, 0x94, 0x83, 0x09, 0x3d, 0x4b,
	0x83, 0xd2, 0x49, 0x61, 0x0b, 0x33, 0x9f, 0x32, 0xd2, 0x93, 0xb7, 0xab, 0x84, 0x7c, 0xef, 0x77,
	0x3b, 0x62, 0x3e, 0x13, 0xf4, 0x98, 0xc3, 0x27, 0x50, 0xe4, 0xbd, 0xf3, 0x57, 0x33, 0xbc, 0x46,
	0x6f, 0x8c, 0x0f, 0x91, 0xea, 0x11, 0x8a, 0x2b, 0x50, 0x1c, 0xc5, 0x13, 0xf7, 0x5d, 0x48, 0xcb,
	0x26, 0x55, 0x35, 0xb0, 0xb8, 0x40, 0xe0, 0x03, 0x80, 0x40, 0x3e, 0x42, 0x5c, 0x78, 0x08, 0xcf,
	0xc5, 0xd9, 0xd2, 0x31, 0xb4, 0x1b, 0x50, 0x3a, 0x16, 0xe3, 0x0b, 0x14, 0x6f, 0xde, 0xc5, 0x8e,
	0xf1, 0x9a, 0xff, 0xde, 0xe5, 0xbe, 0x48, 0xee, 0xb9, 0xe1, 0x73, 0x2a, 0x7f, 0xf2, 0xfc, 0x17,
	0x00, 0x00, 0xff, 0xff, 0x11, 0xfc, 0xac, 0x42, 0xa2, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// RomanClient is the client API for Roman service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RomanClient interface {
	ProcessAnalysis(ctx context.Context, in *TokenAnalysis, opts ...grpc.CallOption) (*Response, error)
}

type romanClient struct {
	cc *grpc.ClientConn
}

func NewRomanClient(cc *grpc.ClientConn) RomanClient {
	return &romanClient{cc}
}

func (c *romanClient) ProcessAnalysis(ctx context.Context, in *TokenAnalysis, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/roman.Roman/ProcessAnalysis", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RomanServer is the server API for Roman service.
type RomanServer interface {
	ProcessAnalysis(context.Context, *TokenAnalysis) (*Response, error)
}

func RegisterRomanServer(s *grpc.Server, srv RomanServer) {
	s.RegisterService(&_Roman_serviceDesc, srv)
}

func _Roman_ProcessAnalysis_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TokenAnalysis)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RomanServer).ProcessAnalysis(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/roman.Roman/ProcessAnalysis",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RomanServer).ProcessAnalysis(ctx, req.(*TokenAnalysis))
	}
	return interceptor(ctx, in, info, handler)
}

var _Roman_serviceDesc = grpc.ServiceDesc{
	ServiceName: "roman.Roman",
	HandlerType: (*RomanServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ProcessAnalysis",
			Handler:    _Roman_ProcessAnalysis_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "roman.proto",
}
